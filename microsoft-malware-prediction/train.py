import pandas as pd
import glob
import shutil
import sys
import numpy as np
from IPython.display import display, HTML
import matplotlib.pyplot as plt
import math
from time import time
from sklearn.impute import SimpleImputer
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
from sklearn.metrics import fbeta_score
from sklearn.model_selection import train_test_split
from xgboost import XGBClassifier
import pickle
from scipy.special import boxcox1p
import os
from past.builtins import execfile


from process_df import process_df

file = 'data/train.csv'
df = pd.read_csv(file)

df = process_df(df)
drop_list2 = ['MachineIdentifier']
df.drop(drop_list2, axis=1, inplace=True)

# Split the data in features and target label
labels = df['HasDetections']
features = df.drop('HasDetections', axis=1)

# labels.to_pickle('labels.pkl')
# features.to_pickle('labels.pkl')

X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size = 0.2, random_state = 0)

# clf = GaussianNB()
clf = XGBClassifier()

trained_model = train_predict(clf, len(y_train), X_train, y_train, X_test, y_test)
with open('trained_model.pkl', 'wb') as f:
    pickle.dump(clf, f)

print('Training done')
